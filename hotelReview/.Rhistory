# url link for first search page
urllinkmain=urlmainlist[pickhotel]
# counter for additional pages
morepg=as.numeric(morepglist[[pickhotel]])
urllinkpre=paste(strsplit(urllinkmain,"Reviews-")[[1]][1],"Reviews",sep="")
urllinkpost=strsplit(urllinkmain,"Reviews-")[[1]][2]
urllink=rep(NA,length(morepg)+1)
urllink[1]=urllinkmain
for(i in 1:length(morepg)){
urllink[i+1]=paste(urllinkpre,"-or",morepg[i],"-",urllinkpost,sep="")
}
head(urllink)
# get summary content with rating
dfrating.l=as.list(rep(NA,length(morepg)+1))
for(i in 1:(length(morepg)+1)){
dfrating.l[[i]]=getOnePage(urllink[i])
}
dfrating=do.call(rbind,dfrating.l)
head(dfrating)
# get full reviews
# get url list that contain full reviews
urllinkpre.rev=gsub("Hotel_Review","ShowUserReviews",strsplit(urllinkmain,"Reviews-")[[1]][1])
urlrev=paste(urllinkpre.rev,"rXX-",urllinkpost,sep="")
dfrating$id2=gsub("rn","",dfrating$id)
urlfullrevlist=sapply(dfrating$id2,function(x) gsub("XX",x,urlrev))
head(urlfullrevlist)
# function to extract full review given review id and full review urllink
getfullrev=function(urllink,id){
# get html content of page containing full review
docrev=htmlTreeParse(urllink,useInternalNodes=TRUE)
# extract node set containing full review
revid=paste("review_",id,sep="")
qry=paste("//p[@id='",revid,"']",sep="")
ns_fullrev=getNodeSet(docrev,eval(qry))
# get full review content
return(xmlValue(ns_fullrev[[1]]))
}
# Get the full review content
fullrev=rep(NA,nrow(dfrating))
for(i in 1:nrow(dfrating)){
fullrev[i]=getfullrev(urlfullrevlist[i],dfrating$id2[i])
if(i %% 20 == 0) print(i)
}
head(fullrev)
dfrating$fullrev=fullrev
# save to Rdataset
filenm=paste("dfrating_",pickhotel,".Rda",sep="")
save(dfrating,file=filenm)
# set working directory
setwd("~/notesofdabbler/Rspace/hotelReview/")
library(dplyr)
library(lubridate)
library(ggplot2)
library(tm)
library(topicmodels)
# load data for a hotel
# currently 3 datasets available from scraping trip advisor data
#    1. J W Marriott, Indianapolis (label: jwmarriott)
#    2. Hampton Inn Indianapolis Northwest -100 (label: hamptoninn)
#    3. Conrad Indianapolis (label: conrad)
setwd("~/notesofdabbler/blog_notesofdabbler/hotelReview/")
pickhotel="jwmarriott"
filenm=paste("dfrating_",pickhotel,".Rda",sep="")
load(filenm)
head(dfrating)
# number of reviews in data
summary(dfrating)
dfrating$yrmon=floor_date(dfrating$ratingdt,"month")
dfrating.bymon=dfrating%>%group_by(yrmon)%>%summarize(count=n(),pct5rating=quantile(ratingnum,0.05),
pct95rating=quantile(ratingnum,0.95),
avgrating=mean(ratingnum))
p=ggplot(dfrating.bymon,aes(x=yrmon,y=avgrating))+geom_line()
p=p+geom_ribbon(aes(ymin=pct5rating,ymax=pct95rating),fill="blue",alpha=0.3)
p=p+theme_minimal()
p
p=ggplot(dfrating.bymon,aes(x=yrmon,y=avgrating))+geom_line(size=1.2)
p=p+geom_ribbon(aes(ymin=pct5rating,ymax=pct95rating),fill="blue",alpha=0.3)
p=p+theme_minimal()
p
p=ggplot(dfrating.bymon,aes(x=yrmon,y=avgrating))+geom_line(size=1.2)
p=p+geom_ribbon(aes(ymin=pct5rating,ymax=pct95rating),fill="blue",alpha=0.3)
p=p+xlab("")+ylab("Rating")+expand_limits(y=0)
p=p+theme_minimal()
p
dfrating.bymon=dfrating%>%group_by(yrmon,ratingnum)%>%summarize(count=n())
dfrating.bymon.agg=dfrating.bymon%>%group_by(yrmon)%>%summarize(countfull=n())
dfrating.bymon=merge(dfrating.bymon,dfrating.bymon.agg,c("yrmon"))
View(dfrating.bymon)
dfrating.bymon.agg=dfrating.bymon%>%group_by(yrmon)%>%summarize(countfull=sum(count))
dfrating.bymon=merge(dfrating.bymon,dfrating.bymon.agg,c("yrmon"))
View(dfrating.bymon.agg)
View(dfrating.bymon)
dfrating.bymon$pctrating=dfrating.bymon$count/dfrating.bymon$countfull
head(dfrating.bymon)
dfrating.bymon=dfrating%>%group_by(yrmon,ratingnum)%>%summarize(count=n())
dfrating.bymon.agg=dfrating.bymon%>%group_by(yrmon)%>%summarize(countfull=sum(count))
dfrating.bymon=merge(dfrating.bymon,dfrating.bymon.agg,c("yrmon"))
head(dfrating)
head(dfrating.bymon)
dfrating.bymon$pctrating=dfrating.bymon$count/dfrating.bymon$countfull
View(dfrating.bymon)
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=ratingnum))+geom_line(size=1.2)
p=p+theme_minimal()
p
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+theme_minimal()
p
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+xlab("")+ylab("% of Ratings")+scale_y_continuous(breaks=seq(0,1,0.2))
p=p+theme_minimal()
p
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+xlab("")+ylab("% of Ratings")+scale_y_continuous(breaks=seq(0,1,0.1))
p=p+theme_minimal()
p
library(scales)
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+xlab("")+ylab("% of Ratings")+scale_y_continuous(breaks=seq(0,1,0.1))+scale_color_discrete(name="")
p=p+theme_minimal()
p
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+xlab("")+ylab("% of Ratings")+scale_y_continuous(breaks=seq(0,1,0.1),labels=percent)+scale_color_discrete(name="Rating")
p=p+theme_minimal()
p
getDTM=function(dftxt){
# code adapted from http://www.rdatamining.com/examples/text-mining
txtcorpus=Corpus(VectorSource(dftxt))
inspect(txtcorpus[1:5])
txtcorpus.cl=tm_map(txtcorpus,tolower)
txtcorpus.cl=tm_map(txtcorpus.cl,removePunctuation)
txtcorpus.cl=tm_map(txtcorpus.cl,removeNumbers)
mystopwords=c(stopwords("english"),"hotel","staff","room","rooms","indianapolis","marriott","conference",
"convention","indy","downtown","hampton","stay","stayed","inn","conrad")
txtcorpus.cl=tm_map(txtcorpus.cl,removeWords,mystopwords)
#dictCorpus=txtcorpus.cl
#txtcorpus.cl=tm_map(txtcorpus.cl,stemDocument)
#txtcorpus.cl=tm_map(txtcorpus.cl,stemCompletion,dictionary=dictCorpus)
dtm=DocumentTermMatrix(txtcorpus.cl)
dtm.m=as.matrix(dtm)
return(dtm.m)
}
dtm.m.list=as.list(rep(NA,5))
tfreq.l=as.list(rep(NA,5))
for(i in 1:5){
dftxt=dfrating$topquote[dfrating$ratingnum==i]
dtm.m=getDTM(dftxt)
tfreq=colSums(dtm.m)
tfreq.l[[i]]=sort(tfreq,decreasing=TRUE)
}
tfreq.l[[i]][1:5]
treq.l[[5]][1:5]
tfreq.l[[5]][1:5]
tfreq.l[[1]][1:5]
table(dfrating$ratingnum)
tfreq.l[[4]][1:5]
printf("hello%s",5)
sprintf("hello%s",5)
sprintf("hello %s and %s",5,6)
i=1
sprintf("Processing data for %s stars",6-i)
table(dfrating$ratingnum)
tmp=data.frame(tfreq.l)
tfreq.l[[1]]
tfreq.l=as.list(rep(NA,5))
# of frequent words to retain
numterms=20
for(i in 1:5){
sprintf("Processing data for %s stars",6-i)
dftxt=dfrating$topquote[dfrating$ratingnum==(6-i)]
dtm.m=getDTM(dftxt)
tfreq=colSums(dtm.m)
tfreq.l[[i]]=sort(tfreq,decreasing=TRUE)[1:numterms]
}
tmp=do.call(cbind,names(tfreq.l))
names(tfreq.l[[1]])
names(tfreq.l[[5]])
# of frequent words to retain
numterms=20
for(i in 1:5){
sprintf("Processing data for %s stars",6-i)
dftxt=dfrating$topquote[dfrating$ratingnum==(6-i)]
dtm.m=getDTM(dftxt)
tfreq=colSums(dtm.m)
tfreq.l[[i]]=names(sort(tfreq,decreasing=TRUE)[1:numterms])
}
tmp=do.call(cbind,tfreq.l)
tmp
class(tmp)
topTerms=do.call(cbind,tfreq.l)
colnames(topTerms)=c("5 star","4 star","3 star","2 star","1 star")
topTerms
dftxt=dfrating$fullrev[dfrating$ratingnum>=4]
dtm.m=getDTM(dftxt)
table(colSums(dtm.m))
sum(colSums(dtm.m))
dim(dtm.m)
sum(dtm.m)
sum(table(colSums(dtm.m)))
tmp=cumsum(table(colSums(dtm.m)))
tmp
tfreq.filt=table(colSums(dtm.m))
tmp=cumsum(tfreq.filt[seq(length(tfreq.filt,1,-1))])
tmp=cumsum(tfreq.filt[seq(length(tfreq.filt),1,-1)])
tmp
tfreq.filt.cumsum=cumsum(tfreq.filt[seq(length(tfreq.filt),1,-1)])
clustcut=max(names(tfreq.filt.cumsum)[tfreq.filt.cumsum<=clustterms])
clustterms=50
clustcut=max(names(tfreq.filt.cumsum)[tfreq.filt.cumsum<=clustterms])
clustcut=min(names(tfreq.filt.cumsum)[tfreq.filt.cumsum<=clustterms])
clustcut=as.numeric(clustcut)
dtm.m.filt=dtm.m[,tfreq>=clustcut]
dim(dtm.m.filt)
dtm.m.filt=dtm.m[,colSums(dtm.m)>=clustcut]
dim(dtm.m.filt)
txtclust=kmeans(t(dtm.m.filt),5)
txtclust$size
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 1]
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,30)
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,30)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 2]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,30)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 3]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,30)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 4]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,30)
dtm.m.filt=dtm.m
txtclust=kmeans(t(dtm.m.filt),5)
txtclust$size
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 1]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,30)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 1]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 2]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 3]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 4]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 5]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
# clustering
# number of terms for clustering
clustterms=500
# find terms cutoff based on frequency
tfreq.filt=table(colSums(dtm.m))
tfreq.filt.cumsum=cumsum(tfreq.filt[seq(length(tfreq.filt),1,-1)])
# get term cutoff
clustcut=min(names(tfreq.filt.cumsum)[tfreq.filt.cumsum<=clustterms])
clustcut=as.numeric(clustcut)
dtm.m.filt=dtm.m[,colSums(dtm.m)>=clustcut]
txtclust=kmeans(t(dtm.m.filt),5)
txtclust$size
tfreq.filt
tfreq.filt.cumsum=cumsum(tfreq.filt[seq(length(tfreq.filt),1,-1)])
tfreq.filt.cumsum
clustcut=min(names(tfreq.filt.cumsum)[tfreq.filt.cumsum<=clustterms])
clustcut=as.numeric(clustcut)
clustcut=min(as.numeric(names(tfreq.filt.cumsum)[tfreq.filt.cumsum<=clustterms]))
dtm.m.filt=dtm.m[,colSums(dtm.m)>=clustcut]
txtclust=kmeans(t(dtm.m.filt),5)
txtclust$size
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 5]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
txtclust=kmeans(t(dtm.m),5)
txtclust$size
set.seed(1234)
txtclust=kmeans(t(dtm.m),5)
txtclust$size
termlist=colnames(dtm.m.filt)
termlist.filt=termlist[txtclust$cluster == 5]
tfreq=colSums(dtm.m.filt)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
termlist=colnames(dtm.m)
termlist.filt=termlist[txtclust$cluster == 5]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
head(tfreq.filt,10)
clustTerms=as.list(rep(NA,5))
termlist=colnames(dtm.m)
for(i in 1:5){
termlist.filt=termlist[txtclust$cluster == i]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
clustTerms[[i]]=tfreq.filt[1:20]
}
clustTerms
clustTerms=as.list(rep(NA,5))
termlist=colnames(dtm.m)
for(i in 1:5){
termlist.filt=termlist[txtclust$cluster == i]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
clustTerms[[i]]=names(tfreq.filt[1:20])
}
clustTerms
tmp=do.call(cbind,clustTerms)
tmp
clustTerms[is.na(clustTerms)]=""
names(clustTerms)=c("cluster 1","cluster 2","cluster 3","cluster 4","cluster 5")
clustTerms
clust.topic=do.call(cbind,clustTerms)
clust.topic[is.na(clust.topic)]=""
names(clust.topic)=c("cluster 1","cluster 2","cluster 3","cluster 4","cluster 5")
clust.topic
clustTerms=as.list(rep(NA,5))
termlist=colnames(dtm.m)
for(i in 1:5){
termlist.filt=termlist[txtclust$cluster == i]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
clustTerms[[i]]=names(tfreq.filt[1:20])
}
clust.topic=do.call(cbind,clustTerms)
clust.topic
clust.topic[is.na(clust.topic)]=""
clust.topic
colnames(clust.topic)=c("cluster 1","cluster 2","cluster 3","cluster 4","cluster 5")
clust.topic
summary(txtsize)
summary(txtclust)
txtclus$totss
txtclust$totss
txtclust$withinss
txtclust$tot.withinss
txtclust$totss
txtclust$withinss
clust.topic
SEED=1234
tmp=LDA(dtm.m.filt,k=5,control=list(seed=SEED))
tmp2=terms(tmp,20)
tmp2
pickhotel="hamptoninn"
filenm=paste("dfrating_",pickhotel,".Rda",sep="")
load(filenm)
head(dfrating)
# number of reviews in data
summary(dfrating)
# frequency of star rating
table(dfrating$ratingnum)
dfrating$yrmon=floor_date(dfrating$ratingdt,"month")
# get rating range by month
dfrating.bymon=dfrating%>%group_by(yrmon,ratingnum)%>%summarize(count=n())
dfrating.bymon.agg=dfrating.bymon%>%group_by(yrmon)%>%summarize(countfull=sum(count))
dfrating.bymon=merge(dfrating.bymon,dfrating.bymon.agg,c("yrmon"))
dfrating.bymon$pctrating=dfrating.bymon$count/dfrating.bymon$countfull
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+xlab("")+ylab("% of Ratings")
p=p+scale_y_continuous(breaks=seq(0,1,0.1),labels=percent)+scale_color_discrete(name="# stars")
p=p+theme_minimal()
p
minrating=min(dfrating$ratingnum)
maxrating=max(dfrating$ratingnum)
tfreq.l=as.list(rep(NA,maxrating-minrating+1))
# of frequent words to retain
numterms=20
rating=maxrating+1
for(i in 1:(maxrating-minrating+1)){
rating=rating-1
sprintf("Processing data for %s stars",rating)
dftxt=dfrating$topquote[dfrating$ratingnum==rating]
dtm.m=getDTM(dftxt)
tfreq=colSums(dtm.m)
tfreq.l[[i]]=names(sort(tfreq,decreasing=TRUE)[1:numterms])
}
table(dfrating$ratingnum)
ratingFreq=table(dfrating$ratingnum)
ratingFreq
colnames(topTerms)=paste(names(ratingFreq),"star",sep=" ")
paste(names(ratingFreq),"star",sep=" ")
5:1
paste(names(ratingFreq),"star",sep=" ")[(maxrating-minrating+1):1]
topTerms=do.call(cbind,tfreq.l)
colnames(topTerms)=paste(names(ratingFreq),"star",sep=" ")[(maxrating-minrating+1):1]
topTerms
# Further investigation of high star rating
dftxt=dfrating$fullrev[dfrating$ratingnum>=4]
dtm.m=getDTM(dftxt)
set.seed(1234)
txtclust=kmeans(t(dtm.m),5)
# size of clusters
txtclust$size
# within and total sum of squares
txtclust$totss
txtclust$withinss
clustTerms=as.list(rep(NA,5))
termlist=colnames(dtm.m)
for(i in 1:5){
termlist.filt=termlist[txtclust$cluster == i]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
clustTerms[[i]]=names(tfreq.filt[1:20])
}
clust.topic=do.call(cbind,clustTerms)
clust.topic[is.na(clust.topic)]=""
colnames(clust.topic)=c("cluster 1","cluster 2","cluster 3","cluster 4","cluster 5")
clust.topic
pickhotel="conrad"
filenm=paste("dfrating_",pickhotel,".Rda",sep="")
load(filenm)
head(dfrating)
# number of reviews in data
summary(dfrating)
# frequency of star rating
ratingFreq=table(dfrating$ratingnum)
ratingFreq
dfrating$yrmon=floor_date(dfrating$ratingdt,"month")
# get rating range by month
dfrating.bymon=dfrating%>%group_by(yrmon,ratingnum)%>%summarize(count=n())
dfrating.bymon.agg=dfrating.bymon%>%group_by(yrmon)%>%summarize(countfull=sum(count))
dfrating.bymon=merge(dfrating.bymon,dfrating.bymon.agg,c("yrmon"))
dfrating.bymon$pctrating=dfrating.bymon$count/dfrating.bymon$countfull
p=ggplot(dfrating.bymon,aes(x=yrmon,y=pctrating,color=factor(ratingnum)))+geom_line(size=1.2)
p=p+xlab("")+ylab("% of Ratings")
p=p+scale_y_continuous(breaks=seq(0,1,0.1),labels=percent)+scale_color_discrete(name="# stars")
p=p+theme_minimal()
p
minrating=min(dfrating$ratingnum)
maxrating=max(dfrating$ratingnum)
tfreq.l=as.list(rep(NA,maxrating-minrating+1))
# of frequent words to retain
numterms=20
rating=maxrating+1
for(i in 1:(maxrating-minrating+1)){
rating=rating-1
sprintf("Processing data for %s stars",rating)
dftxt=dfrating$topquote[dfrating$ratingnum==rating]
dtm.m=getDTM(dftxt)
tfreq=colSums(dtm.m)
tfreq.l[[i]]=names(sort(tfreq,decreasing=TRUE)[1:numterms])
}
topTerms=do.call(cbind,tfreq.l)
colnames(topTerms)=paste(names(ratingFreq),"star",sep=" ")[(maxrating-minrating+1):1]
topTerms
set.seed(1234)
txtclust=kmeans(t(dtm.m),5)
# size of clusters
txtclust$size
# within and total sum of squares
txtclust$totss
txtclust$withinss
# get list of frequent terms in each cluster
clustTerms=as.list(rep(NA,5))
termlist=colnames(dtm.m)
for(i in 1:5){
termlist.filt=termlist[txtclust$cluster == i]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
clustTerms[[i]]=names(tfreq.filt[1:20])
}
clust.topic=do.call(cbind,clustTerms)
clust.topic[is.na(clust.topic)]=""
colnames(clust.topic)=c("cluster 1","cluster 2","cluster 3","cluster 4","cluster 5")
# print list of frequent terms in each cluster
clust.topic
dftxt=dfrating$fullrev[dfrating$ratingnum>=4]
dtm.m=getDTM(dftxt)
set.seed(1234)
txtclust=kmeans(t(dtm.m),5)
# size of clusters
txtclust$size
# within and total sum of squares
txtclust$totss
txtclust$withinss
# get list of frequent terms in each cluster
clustTerms=as.list(rep(NA,5))
termlist=colnames(dtm.m)
for(i in 1:5){
termlist.filt=termlist[txtclust$cluster == i]
tfreq=colSums(dtm.m)
tfreq.filt=sort(tfreq[termlist.filt],decreasing=TRUE)
clustTerms[[i]]=names(tfreq.filt[1:20])
}
clust.topic=do.call(cbind,clustTerms)
clust.topic[is.na(clust.topic)]=""
colnames(clust.topic)=c("cluster 1","cluster 2","cluster 3","cluster 4","cluster 5")
# print list of frequent terms in each cluster
clust.topic
